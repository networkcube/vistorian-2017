{"version":3,"sources":["vistorian/classes/vistorian.ts"],"names":[],"mappings":"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","file":"vistorian/classes/vistorian.js","sourcesContent":["/// <reference path=\"./storage.ts\"/>\n/// <reference path=\"../../networkcube/core/networkcube.d.ts\"/>\n\n/*\nConvenient class that provides an API to the vistorian \"framework\"\nand the user data.\nThis API should be used in every visualization.\n*/\n\n// function vistorian(){\n\n// \tfunction getSchema(tableName){\n// \t\t// return getUrlVars()[tableName]\n// \t //        .replace('[', '')\n// \t //        .replace(']', '')\n// \t //        .split(',')\n// \t  var schema = getUrlVars()['schema']\n// \t  schema = schema.replace(/%22/g, '\"').replace(/%20/g, '_')\n// \t  schema = JSON.parse(schema);\n// \t  return schema;\n// \t}\n// }\n\nmodule vistorian {\n\n    // LOADING FONTS:\n    var head = $('head');\n    head.append(\"<link href='http://fonts.googleapis.com/css?family=Open+Sans+Condensed:300italic,700,300&subset=latin,latin-ext' rel='stylesheet' type='text/css'></head>\")\n    head.append(\"<link href='http://fonts.googleapis.com/css?family=Great+Vibes' rel='stylesheet' type='text/css'>\")\n    head.append(\"<link href='http://fonts.googleapis.com/css?family=Playfair+Display' rel='stylesheet' type='text/css'>\")\n    head.append(\"<link href='http://fonts.googleapis.com/css?family=Amatic+SC:400,700' rel='stylesheet' type='text/css'>\")\n    head.append(\"<link href='http://fonts.googleapis.com/css?family=Lora' rel='stylesheet' type='text/css'>\")\n    append('./lib/xml2json.js');\n    function append(url: string) {\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = url;\n        $(\"head\").append(script);\n    }\n\n    var tables = [];\n\n\n    // DATA TYPES\n\n    export class VTable {\n        name: string;\n        data: any[];\n        constructor(name: string, data: any[]) {\n            this.name = name;\n            this.data = data;\n        }\n    }\n\n    export class VTableSchema {\n        name: string;\n        constructor(name: string) {\n            this.name = name;\n        }\n\n    }\n\n    export class VNodeSchema extends VTableSchema {\n        relation: number[] = []; // relationships defined in a node table (e.g. father, mother..)\n        location: number = -1; // location of node\n        id: number = 0;\n        label: number = -1;\n        time: number = -1;\n        nodeType: number = -1;\n        constructor() {\n            super('userNodeSchema')\n        };\n    }\n    export class VLinkSchema extends VTableSchema {\n        location_source: number = -1; // location of source node\n        location_target: number = -1; // location of target node\n        id: number = 0;\n        source: number = -1;\n        target: number = -1;\n        weight: number = -1;\n        time: number = -1;\n        linkType: number = -1;\n        constructor() {\n            super('userLinkSchema')\n        };\n    }\n    export class VLocationSchema extends VTableSchema {\n        id: number = 0;\n        label: number = 1;\n        geoname: number = 2\n        longitude: number = 3;\n        latitude: number = 4;\n        constructor() {\n            super('userLocationSchema')\n        };\n    }\n\n    // this represents a network the user created, including\n    // - the originally formatted tables\n    // - the node and edge schemas on those tables\n    // - the networkcube data set with the normalized tables\n    export class Network {\n        id: number;\n        name: string;\n        userNodeTable: VTable;\n        userLinkTable: VTable;\n        userNodeSchema: VNodeSchema;\n        userLinkSchema: VLinkSchema;\n        userLocationTable: VTable;\n        userLocationSchema: networkcube.LocationSchema;\n        networkCubeDataSet: networkcube.DataSet;\n        timeFormat: string;\n\n        constructor(id: number) {\n            this.id = id;\n            this.userNodeSchema = new VNodeSchema();\n            this.userLinkSchema = new VLinkSchema();\n        }\n    }\n\n\n\n\n    // FUNCTIONS\n\n    export function loadCSV(files: File[], callBack: Function) {\n\n        var loadCount = 0;\n        var table\n        var tables: VTable[] = [];\n        var fileContents: any[] = []\n        var readers: FileReader[] = [];\n        for (var i = 0, f: File; f = files[i]; i++) {\n            var reader = new FileReader();\n            reader.filename = f.name.split('_')[0];\n            readers[i] = reader;\n\n            reader.onload = function(f) {\n                var obj: Object = {\n                    content: f.target.result,\n                    name: f.target.filename\n                }\n                var i = readers.indexOf(f.target);\n                fileContents[i] = obj;\n                table = new VTable(\n                    // eliminate spaces in the name because they will \n                    // interfere with creating html element ids\n                    files[i].name.replace('.csv', '').replace(' ','_').trim(),\n                    Papa.parse(fileContents[i].content).data\n                )\n\n                // remove white spaces, extra cols and rows etc..\n                formatTable(table);\n\n                storage.saveUserTable(table);\n                loadCount++;\n\n                console.log(loadCount, files.length);\n                if (loadCount == files.length)\n                    callBack();\n            }\n            reader.readAsText(f);\n        }\n    }\n\n    export function exportTableCSV(table) {\n        // console.log(table.data);\n        var csv = Papa.unparse(table.data, { quotes: true });\n        var textFileAsBlob = new Blob([csv], { type: 'text/csv' });\n        var fileNameToSaveAs = table.name + '.csv';\n        var downloadLink = document.createElement('a');\n        downloadLink.download = fileNameToSaveAs;\n        downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);\n        downloadLink.click();\n    }\n\n    export function exportLocationTableCSV(networkname, table) {\n        var csv = Papa.unparse(table, { quotes: true });\n        var textFileAsBlob = new Blob([csv], { type: 'text/csv' });\n        var fileNameToSaveAs = networkname + '-locations.csv';\n        var downloadLink = document.createElement('a');\n        downloadLink.download = fileNameToSaveAs;\n        downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);\n        downloadLink.click();\n    }\n\n\n    // Cleans and formats the data as it comes from the user,\n    // for proper display and processing.\n    // - trim\n    // - add line numbers\n    export function formatTable(table) {\n\n        var data: any[] = [];\n        var indexify: boolean =\n            !(table.data[0][0] == 'ID'\n                || table.data[0][0] == 'id'\n                || table.data[0][0] == 'Id'\n                || table.data[0][0] == 'Index'\n                || table.data[0][0].includes('index')\n                || table.data[0][0].includes('Index'));\n        // var indexify = false;\n        // test\n        // if(Number(table.data[1][0]) == NaN){\n        // \tindexify = true;\n        // }\t\n\n        var numCols: number = table.data[0].length;\n        var emptyCols: number = 0;\n        var row: any[]\n        for (var i = 0; i < table.data.length; i++) {\n            row = [];\n            emptyCols = 0;\n            if (indexify) {\n                if (i == 0)\n                    row.push('Index');\n                else\n                    row.push((i - 1) + '');\n            }\n            for (var j = 0; j < numCols; j++) {\n                if (table.data[i][j] == undefined) {\n                    table.data[i][j] = '';\n                }\n                if (table.data[i][j].length == 0) {\n                    emptyCols++;\n                }\n                row.push(table.data[i][j].trim());\n            }\n            if (emptyCols < numCols - 1) {\n                data.push(row)\n            }\n        }\n        table.data = data;\n        return table\n    }\n\n\n\t/**\n\t * Checks the time column in the passed table against the entered\n\t * time format and returns an array of fields that do not match the\n\t * that time format.\n\t * @param  {Table}  table      [description]\n\t * @param  {number} timeCol    [description]\n\t * @param  {string} timeFormat [description]\n\t * @return {[type]}            [description]\n\t */\n    export function checkTime(table: VTable, timeCol: number, timeFormat: string): number[] {\n        var timeString: string;\n        var error: number[] = [];\n        console.log('table', table)\n        for (var i = 0; i < table.data.length; i++) {\n            timeString = table.data[i][timeCol];\n\n            if (timeString.length == 0) {\n                error.push(i);\n                continue;\n            }\n            try {\n                moment(timeString, timeFormat);\n            } catch (err) {\n                error.push(i);\n            }\n        }\n        return error;\n    }\n\n    var requestTimer;\n    var requestsRunning: number = 0;\n    var fullGeoNames = []\n    export function updateLocationTable(userLocationTable: VTable, locationSchema: networkcube.LocationSchema, callBack: Function) {\n        saveCurrentNetwork(false);\n        var data = userLocationTable.data;\n        requestsRunning = 0;\n        fullGeoNames = [];\n        for (var i = 1; i < data.length; i++) {\n            console.log('send update request ', data[i][locationSchema.geoname])\n            updateEntryToLocationTable(i, data[i][locationSchema.geoname], userLocationTable, locationSchema);\n        }\n        // wait for all requests to be returned, until continue\n        requestTimer = setInterval(function() {\n            currentNetwork.userLocationTable = userLocationTable;\n            checkRequests(callBack, [])\n        }, 500);\n\n    }\n\n\n    function checkRequests(callBack, locationsFound) {\n        if (requestsRunning == 0) {\n            clearInterval(requestTimer);\n            callBack(locationsFound);\n        }\n    }\n\n    function updateEntryToLocationTable(index: number, geoname: string, locationTable: VTable, locationSchema: networkcube.LocationSchema) {\n        geoname = geoname.trim();\n        fullGeoNames.push(geoname);\n        // get coordinates for name: \n        var xhr = $.ajax({\n            url: \"http://ref.dariah.eu/tgnsearch/tgnquery2.xql?ac=\" + geoname.split(',')[0].trim(),\n            dataType: 'xml'\n        })\n            .done(function(data, text, XMLHttpRequest) {\n                var data = x2js.xml2json(data);\n                var entry;\n                var length;\n                var rowIndex = XMLHttpRequest.uniqueId + 1;\n\n                var userLocationLabel = locationTable.data[rowIndex][locationSchema.label];\n                if (data.response.term != undefined) {\n\n                    // get all results\n                    var validResults = []\n                    var result;\n\n                    // console.log('data.response.term',data.response.term)\n                    if (data.response.term[0] != undefined) {\n                        for (var i = 0; i < data.response.term.length; i++) {\n                            entry = data.response.term[i];\n                            if (entry == undefined)\n                                continue;\n                            if (entry.longitude != undefined\n                                && entry.latitude != undefined\n                                && typeof entry.longitude == 'string'\n                                && typeof entry.latitude == 'string'\n                            ) {\n                                validResults.push(entry);\n                            }\n                        }\n                    } else {\n                        validResults.push(data.response.term);\n                    }\n\n\n                    // if no results returned, save the user location name and return;\n                    if (validResults.length == 0) {                    // no value\n                        locationTable.data[rowIndex] = [rowIndex - 1, userLocationLabel, geoname, undefined, undefined];\n                        return;\n                    }\n\n\n                    if (validResults.length == 1) {\n                        // if only one valid result has been returned, add this single result\n                        // locationTable.data.push([locationTable.data.length-1, userLocationLabel, geoname, validResults[0].longitude, validResults[0].latitude])\t\n                        locationTable.data[rowIndex] = [rowIndex - 1, userLocationLabel, geoname, validResults[0].longitude, validResults[0].latitude];\n                        return;\n                    }\n                    else {\n                        // look for specification in the user input that matches the geographical hiearachy of the result\n\n                        // trim user specifications\n                        var geonameAttributes = fullGeoNames[rowIndex - 1];\n                        geonameAttributes = geonameAttributes.split(',');\n                        for (var j = 0; j < geonameAttributes.length; j++) {\n                            geonameAttributes[j] = geonameAttributes[j].trim();\n                        }\n\n                        var regionTerms;\n                        // look for every valid result\n                        for (var i = 0; i < validResults.length; i++) {\n                            regionTerms = validResults[i].path.split('|');\n\n                            // trim result terms\n                            for (var j = 0; j < regionTerms.length; j++) {\n                                regionTerms[j] = regionTerms[j].trim();\n                            }\n\n                            // do terms match?\n                            if (geonameAttributes.length > 1 && regionTerms.length > 1) {\n                                for (var j = 1; j < geonameAttributes.length; j++) {\n                                    for (var k = 1; k < regionTerms.length; k++) {\n                                        if (geonameAttributes[j] == regionTerms[k]) {\n                                            locationTable.data[rowIndex] = [rowIndex - 1, userLocationLabel, geoname, validResults[i].longitude, validResults[i].latitude];\n                                            console.log('update', geoname, validResults[i].longitude, validResults[i].latitude);\n                                            return;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        locationTable.data[rowIndex] = [rowIndex - 1, userLocationLabel, geoname, validResults[0].longitude, validResults[0].latitude];\n                        console.log('update', geoname, validResults[0].longitude, validResults[0].latitude);\n                    }\n                } else {\n                    // if answer is valid, means that webservice didn't find that name. \n                    if (geoname == '')\n                        return;\n                    locationTable.data[rowIndex] = [rowIndex - 1, userLocationLabel, geoname, undefined, undefined];\n                    console.log('update', geoname, undefined, undefined);\n                }\n            })\n            .always(function() {\n                requestsRunning--;\n            });\n        xhr['uniqueId'] = requestsRunning++;\n    }\n\n\n\n\n\n\n    export function cleanTable(table: any[][]) {\n        for (var i = 0; i < table.length; i++) {\n            for (var j = 0; j < table.length; j++) {\n                if (table[i][j] != undefined)\n                    table[i][j] = table[i][j].trim();\n            }\n        }\n    }\n\n\n\n}\n"],"sourceRoot":"/source/"}